var vuetabs = (function (exports) {
  'use strict';

  var Tab = {
    name: 'Tab',
    functional: true,
    props: {
      title: {
        type: String,
        default: function default$1 () {
          return 'Title'
        }
      },
      icon: {
        type: Object,
        default: function default$2 () {
          return {
            attrs: function attrs () {},
            path: function path () {}
          }
        }
      },
      hash: {
        type: String,
        default: null
      },
      end: {
        type: Boolean,
        default: false
      },
      ghost: {
        type: Boolean,
        default: false
      }
    },
    render: function render (h, context) {
      if (context.props.ghost) {
        return h('div', context)
      }

      if (!context.scopedSlots.default) {
        return h('div', context)
      }

      return h('div', context, context.scopedSlots.default())
    }
  };

  function styleInject$1(css, ref) {
    if ( ref === void 0 ) { ref = {}; }
    var insertAt = ref.insertAt;

    if (!css || typeof document === 'undefined') { return; }

    var head = document.head || document.getElementsByTagName('head')[0];
    var style = document.createElement('style');
    style.type = 'text/css';

    if (insertAt === 'top') {
      if (head.firstChild) {
        head.insertBefore(style, head.firstChild);
      } else {
        head.appendChild(style);
      }
    } else {
      head.appendChild(style);
    }

    if (style.styleSheet) {
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }
  }

  var css_248z$6 = ".default-module__tabs * {\n  box-sizing: border-box;\n}\n\n.default-module__items {\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none;\n}\n\n.default-module__item {\n  display: block;\n  padding: 0.5rem 0.75rem;\n  text-decoration: none;\n}\n.default-module__item--end {\n  justify-content: flex-end;\n  margin-left: auto;\n}\n\n.default-module__panel {\n  padding: 1rem;\n}\n\n.default-module__octicon {\n  height: 1em;\n  width: auto;\n}\n\n.default-module__items {\n  border-bottom: 2px solid #becad9;\n}\n\n.default-module__item {\n  color: #4b6280;\n  border-bottom: 2px solid #becad9;\n  margin-bottom: -2px;\n}\n.default-module__item:hover {\n  border-color: #4b6280;\n}\n.default-module__item--active {\n  color: #3c82d0 !important;\n  border-color: #3c82d0 !important;\n}\n\n.default-module__panel {\n  color: #253140;\n}";
  var themeDefault = {"tabs":"default-module__tabs","items":"default-module__items","item":"default-module__item","item--end":"default-module__item--end","panel":"default-module__panel","octicon":"default-module__octicon","item--active":"default-module__item--active"};
  styleInject$1(css_248z$6);

  var css_248z$5 = ".dark-module__tabs * {\n  box-sizing: border-box;\n}\n\n.dark-module__items {\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none;\n}\n\n.dark-module__item {\n  display: block;\n  padding: 0.5rem 0.75rem;\n  text-decoration: none;\n}\n.dark-module__item--end {\n  justify-content: flex-end;\n  margin-left: auto;\n}\n\n.dark-module__panel {\n  padding: 1rem;\n}\n\n.dark-module__octicon {\n  height: 1em;\n  width: auto;\n}\n\n.dark-module__items {\n  border-bottom: 2px solid gray;\n}\n\n.dark-module__item {\n  color: #e6e6e6;\n  border-bottom: 2px solid gray;\n  margin-bottom: -2px;\n}\n.dark-module__item:hover {\n  border-color: #e6e6e6;\n}\n.dark-module__item--active {\n  color: #fff !important;\n  border-color: #fff !important;\n}\n\n.dark-module__panel {\n  color: #fff;\n}";
  var dark_module = {"tabs":"dark-module__tabs","items":"dark-module__items","item":"dark-module__item","item--end":"dark-module__item--end","panel":"dark-module__panel","octicon":"dark-module__octicon","item--active":"dark-module__item--active"};
  styleInject$1(css_248z$5);

  var css_248z$4 = ".material-module__tabs * {\n  box-sizing: border-box;\n  font-family: \"Roboto\", sans-serif;\n}\n\n.material-module__items {\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none;\n  line-height: 48px;\n  min-height: 48px;\n}\n\n.material-module__item {\n  position: relative;\n  display: inline-block;\n  padding: 0 24px;\n  font-size: 0.9em;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n}\n.material-module__item:after {\n  position: absolute;\n  content: \"\";\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 0px;\n  transition: height 0.4s cubic-bezier(0.23, 0.54, 0.19, 0.99);\n}\n.material-module__item--active:after {\n  height: 3px;\n}\n.material-module__item--end {\n  justify-content: flex-end;\n  margin-left: auto;\n}\n\n.material-module__panel {\n  padding: 1rem;\n}\n\n.material-module__octicon {\n  height: 1em;\n  width: auto;\n  margin-right: 4px;\n}\n\n.material-module__items {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.material-module__item {\n  color: rgba(0, 0, 0, 0.82);\n}\n.material-module__item:hover {\n  background: rgba(0, 0, 0, 0.04);\n}\n.material-module__item:after {\n  background: #03A9F4;\n}\n.material-module__item--active {\n  color: #03A9F4 !important;\n}\n\n.material-module__panel {\n  color: rgba(0, 0, 0, 0.82);\n}";
  var material_module = {"tabs":"material-module__tabs","items":"material-module__items","item":"material-module__item","item--active":"material-module__item--active","item--end":"material-module__item--end","panel":"material-module__panel","octicon":"material-module__octicon"};
  styleInject$1(css_248z$4);

  var css_248z$3 = ".material-dark-module__tabs * {\n  box-sizing: border-box;\n  font-family: \"Roboto\", sans-serif;\n}\n\n.material-dark-module__items {\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none;\n  line-height: 48px;\n  min-height: 48px;\n}\n\n.material-dark-module__item {\n  position: relative;\n  display: inline-block;\n  padding: 0 24px;\n  font-size: 0.9em;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n}\n.material-dark-module__item:after {\n  position: absolute;\n  content: \"\";\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 0px;\n  transition: height 0.4s cubic-bezier(0.23, 0.54, 0.19, 0.99);\n}\n.material-dark-module__item--active:after {\n  height: 3px;\n}\n.material-dark-module__item--end {\n  justify-content: flex-end;\n  margin-left: auto;\n}\n\n.material-dark-module__panel {\n  padding: 1rem;\n}\n\n.material-dark-module__octicon {\n  height: 1em;\n  width: auto;\n  margin-right: 4px;\n}\n\n.material-dark-module__items {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  background: rgba(0, 0, 0, 0.82);\n}\n\n.material-dark-module__item {\n  color: #dddddd;\n}\n.material-dark-module__item:hover {\n  background: rgba(255, 255, 255, 0.08);\n}\n.material-dark-module__item:after {\n  background: #66BB6A;\n}\n.material-dark-module__item--active {\n  color: #66BB6A !important;\n}\n\n.material-dark-module__panel {\n  background: rgba(0, 0, 0, 0.82);\n  color: #dddddd;\n}";
  var materialDark_module = {"tabs":"material-dark-module__tabs","items":"material-dark-module__items","item":"material-dark-module__item","item--active":"material-dark-module__item--active","item--end":"material-dark-module__item--end","panel":"material-dark-module__panel","octicon":"material-dark-module__octicon"};
  styleInject$1(css_248z$3);

  var css_248z$2 = ".metro-module__tabs * {\n  box-sizing: border-box;\n  font-family: \"Segoe UI\", \"SegoeUI\", \"Roboto\", sans-serif;\n}\n\n.metro-module__items {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 0;\n  list-style: none;\n  line-height: 40px;\n  min-height: 40px;\n  padding: 10px;\n  border: 2px solid white;\n}\n\n.metro-module__item {\n  position: relative;\n  display: inline-block;\n  padding: 0 18px;\n  font-size: 1rem;\n  text-decoration: none;\n}\n.metro-module__item--end {\n  justify-content: flex-end;\n  margin-left: auto;\n}\n\n.metro-module__panel {\n  padding: 1rem;\n}\n\n.metro-module__octicon {\n  height: 1em;\n  width: auto;\n  margin-right: 4px;\n}\n\n.metro-module__items {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n\n.metro-module__item {\n  color: rgba(0, 0, 0, 0.82);\n}\n.metro-module__item:hover {\n  background: rgba(0, 0, 0, 0.08);\n}\n.metro-module__item:after {\n  background: #7e3878;\n}\n.metro-module__item--active {\n  background: #7e3878 !important;\n  color: white;\n}\n\n.metro-module__panel {\n  color: rgba(0, 0, 0, 0.82);\n}";
  var metro_module = {"tabs":"metro-module__tabs","items":"metro-module__items","item":"metro-module__item","item--end":"metro-module__item--end","panel":"metro-module__panel","octicon":"metro-module__octicon","item--active":"metro-module__item--active"};
  styleInject$1(css_248z$2);

  var css_248z$1 = ".metro-dark-module__tabs * {\n  box-sizing: border-box;\n  font-family: \"Segoe UI\", \"SegoeUI\", \"Roboto\", sans-serif;\n}\n\n.metro-dark-module__items {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 0;\n  list-style: none;\n  line-height: 40px;\n  min-height: 40px;\n  padding: 10px;\n  border: 2px solid white;\n}\n\n.metro-dark-module__item {\n  position: relative;\n  display: inline-block;\n  padding: 0 18px;\n  font-size: 1rem;\n  text-decoration: none;\n}\n.metro-dark-module__item--end {\n  justify-content: flex-end;\n  margin-left: auto;\n}\n\n.metro-dark-module__panel {\n  padding: 1rem;\n}\n\n.metro-dark-module__octicon {\n  height: 1em;\n  width: auto;\n  margin-right: 4px;\n}\n\n.metro-dark-module__items {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n\n.metro-dark-module__item {\n  color: white;\n}\n.metro-dark-module__item:hover {\n  background: rgba(255, 255, 255, 0.08);\n}\n.metro-dark-module__item:after {\n  background: #2d89ef;\n}\n.metro-dark-module__item--active {\n  background: #2d89ef !important;\n  color: white;\n}\n\n.metro-dark-module__panel {\n  color: white;\n}";
  var metroDark_module = {"tabs":"metro-dark-module__tabs","items":"metro-dark-module__items","item":"metro-dark-module__item","item--end":"metro-dark-module__item--end","panel":"metro-dark-module__panel","octicon":"metro-dark-module__octicon","item--active":"metro-dark-module__item--active"};
  styleInject$1(css_248z$1);

  function setHashEmpty () {
    if (!window.history.pushState) {
      return
    }

    window.history.pushState('', document.title, window.location.pathname + window.location.search);
  }

  function setHash (rawHash) {
    if (!rawHash) {
      return setHashEmpty()
    }

    var normalized = "#" + rawHash;

    if (normalized === window.location.hash) {
      return
    }

    window.location.hash = normalized;
  }

  var isObject = function (obj) { return obj && typeof obj === 'object'; };
  function deepmerge (target, source) {
    if (!isObject(source)) {
      return target
    }

    if (!isObject(target)) {
      return source
    }

    target = Object.assign({}, target);
    Object.keys(source).forEach(function (key) {
      var targetValue = target[key];
      var sourceValue = source[key];

      if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {
        target[key] = targetValue.concat(sourceValue);
      } else if (isObject(targetValue) && isObject(sourceValue)) {
        target[key] = deepmerge(Object.assign({}, targetValue), sourceValue);
      } else {
        target[key] = sourceValue;
      }
    });

    return target
  }

  var Octicon = {
    functional: true,
    props: {
      icon: {
        type: Object,
        required: true,
        validator: function validator (value) {
          return value.attrs instanceof Function && value.path instanceof Function
        }
      },
      scale: {
        type: Number,
        default: 1
      },
      className: {
        type: String,
        default: null
      },
      label: {
        type: String,
        default: null
      }
    },
    render: function render (createElement, ref) {
      var props = ref.props;

      var icon = props.icon;
      var scale = props.scale;
      var className = props.className;
      var label = props.label;
      var options = { scale: scale, class: className, label: label };

      return createElement('svg', { attrs: icon.attrs(options) }, [ createElement('path', { attrs: icon.path() }) ])
    }
  };

  function styleInject(css, ref) {
    if ( ref === void 0 ) { ref = {}; }
    var insertAt = ref.insertAt;

    if (!css || typeof document === 'undefined') { return; }

    var head = document.head || document.getElementsByTagName('head')[0];
    var style = document.createElement('style');
    style.type = 'text/css';

    if (insertAt === 'top') {
      if (head.firstChild) {
        head.insertBefore(style, head.firstChild);
      } else {
        head.appendChild(style);
      }
    } else {
      head.appendChild(style);
    }

    if (style.styleSheet) {
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }
  }

  var css_248z = ".octicon{display:inline-block;vertical-align:text-top;fill:currentColor}";
  styleInject(css_248z);

  var TabItem = {
    functional: true,
    inject: ['theme'],
    props: {
      nav: {
        type: Function,
        default: undefined
      },
      item: {
        type: Object,
        required: true
      }
    },
    render: function render (h, ctx) {
      var data = ctx.data;
      var props = ctx.props;
      var injections = ctx.injections;
      if (typeof props.nav === 'function') {
        return props.nav(data)
      }

      var children = [
        props.item.title
      ];

      if (props.item.icon.attrs()) {
        children[0] = h('span', {}, children[0]);
        children.unshift([
          h(Octicon, { props: { icon: props.item.icon, className: injections.theme.octicon } }),
          ' '
        ]);
      }

      data.attrs.href = '#';
      return h('a', data, children)
    }
  };

  var TabPanel = {
    name: 'TabPanel',
    functional: true,
    props: {
      item: {
        type: Object,
        default: function default$1 () {
          return {
            data: {},
            children: []
          }
        }
      }
    },
    render: function render (h, context) {
      var data = context.data;
      var props = context.props;
      return h('div', deepmerge(data, props.item.data.data), props.item.children)
    }
  };

  var TabPanelStateful = {
    name: 'TabPanelStateful',
    props: {
      item: {
        type: Object,
        default: function default$1 () {
          return {
            data: {},
            children: []
          }
        }
      }
    },
    render: function render (h) {
      return h('div', this.item.data.data, this.item.children)
    }
  };

  //

  var script = {
    components: { TabItem: TabItem, TabPanel: TabPanel, TabPanelStateful: TabPanelStateful },
    provide: function provide () {
      return {
        theme: this.theme
      }
    },
    props: {
      theme: {
        type: Object,
        default: function default$1 () {
          return themeDefault
        }
      },
      show: {
        type: Number,
        default: 0
      },
      keepAlive: {
        type: Boolean,
        default: false
      },
      hold: {
        type: [Boolean, Function],
        default: false
      }
    },
    data: function data () {
      return {
        active: 0,
        slots: []
      }
    },
    computed: {
      validChildren: function validChildren () {
        return this.slots.filter(function (vnode) { return vnode && vnode.fnOptions && vnode.fnOptions.name === 'Tab' && vnode.data; })
      },
      items: function items () {
        return this.validChildren.map(function (vnode) { return vnode.data.props; })
      },
      navs: function navs () {
        return this.validChildren.map(function (vnode) { return vnode.data.scopedSlots.nav; })
      },
      listeners: function listeners () {
        return this.validChildren.map(function (vnode) { return vnode.data.listeners; })
      },
      activePanel: function activePanel () {
        var this$1$1 = this;

        return this.validChildren.find(function (panel, i) { return this$1$1.isActive(i); })
      }
    },
    watch: {
      show: {
        immediate: true,
        handler: function handler (val) {
          this.active = val;
        }
      },
      items: function items () {
        this.syncActiveHash();
      }
    },
    created: function created () {
      this.loadSlots();
    },
    updated: function updated () {
      // Because $slots is not reactive we need these below lines for hot-reloading
      if (!this.$slots.default || !this.$slots.default.length) {
        return
      }

      if (this.$slots.default === this.slots) {
        // idk how but this comparison of objects just works o.O
        return
      }

      this.loadSlots();
    },
    methods: {
      currentHash: function currentHash () {
        return (this.$route ? this.$route.hash : window.location.hash).substring(1)
      },
      itemClicked: function itemClicked (index) {
        var item = this.items[index];
        if (item.ghost) {
          return
        }

        if (typeof this.hold === 'boolean' && this.hold) {
          return
        }

        if (typeof this.hold === 'function' && this.hold(item, index)) {
          return
        }

        return this.setActive(index)
      },
      isActive: function isActive (index) {
        if (index === this.active) {
          return true
        }

        return false
      },
      setHash: function setHash$1 (index) {
        var hash = this.currentHash();
        var item = this.items[index];
        if (hash === item.hash) {
          return
        }

        if (this.$route && !hash && !item.hash) {
          return
        }

        if (this.$route) {
          this.$router.replace({ hash: item.hash });
          return
        }

        setHash(item.hash);
      },
      syncActiveHash: function syncActiveHash () {
        var hash = this.currentHash();
        var index = this.items.findIndex(function (element) {
          return element.hash === hash
        });

        if (index < 0) {
          return
        }

        this.setActive(index);
      },
      setActive: function setActive (index) {
        this.setHash(index);
        this.active = index;
        this.$emit('update:show', index);
      },
      loadSlots: function loadSlots () {
        this.slots = this.$slots.default || [];
      }
    }
  };

  function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
      if (typeof shadowMode !== 'boolean') {
          createInjectorSSR = createInjector;
          createInjector = shadowMode;
          shadowMode = false;
      }
      // Vue.extend constructor export interop.
      var options = typeof script === 'function' ? script.options : script;
      // render functions
      if (template && template.render) {
          options.render = template.render;
          options.staticRenderFns = template.staticRenderFns;
          options._compiled = true;
          // functional template
          if (isFunctionalTemplate) {
              options.functional = true;
          }
      }
      // scopedId
      if (scopeId) {
          options._scopeId = scopeId;
      }
      var hook;
      if (moduleIdentifier) {
          // server build
          hook = function (context) {
              // 2.3 injection
              context =
                  context || // cached call
                      (this.$vnode && this.$vnode.ssrContext) || // stateful
                      (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
              // 2.2 with runInNewContext: true
              if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                  context = __VUE_SSR_CONTEXT__;
              }
              // inject component styles
              if (style) {
                  style.call(this, createInjectorSSR(context));
              }
              // register component module identifier for async chunk inference
              if (context && context._registeredComponents) {
                  context._registeredComponents.add(moduleIdentifier);
              }
          };
          // used by ssr in case component is cached and beforeCreate
          // never gets called
          options._ssrRegister = hook;
      }
      else if (style) {
          hook = shadowMode
              ? function (context) {
                  style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
              }
              : function (context) {
                  style.call(this, createInjector(context));
              };
      }
      if (hook) {
          if (options.functional) {
              // register for functional component in vue file
              var originalRender = options.render;
              options.render = function renderWithStyleInjection(h, context) {
                  hook.call(context);
                  return originalRender(h, context);
              };
          }
          else {
              // inject component registration as beforeCreate hook
              var existing = options.beforeCreate;
              options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
          }
      }
      return script;
  }

  var isOldIE = typeof navigator !== 'undefined' &&
      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());
  function createInjector(context) {
      return function (id, style) { return addStyle(id, style); };
  }
  var HEAD;
  var styles = {};
  function addStyle(id, css) {
      var group = isOldIE ? css.media || 'default' : id;
      var style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });
      if (!style.ids.has(id)) {
          style.ids.add(id);
          var code = css.source;
          if (css.map) {
              // https://developer.chrome.com/devtools/docs/javascript-debugging
              // this makes source maps inside style tags work properly in Chrome
              code += '\n/*# sourceURL=' + css.map.sources[0] + ' */';
              // http://stackoverflow.com/a/26603875
              code +=
                  '\n/*# sourceMappingURL=data:application/json;base64,' +
                      btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +
                      ' */';
          }
          if (!style.element) {
              style.element = document.createElement('style');
              style.element.type = 'text/css';
              if (css.media)
                  { style.element.setAttribute('media', css.media); }
              if (HEAD === undefined) {
                  HEAD = document.head || document.getElementsByTagName('head')[0];
              }
              HEAD.appendChild(style.element);
          }
          if ('styleSheet' in style.element) {
              style.styles.push(code);
              style.element.styleSheet.cssText = style.styles
                  .filter(Boolean)
                  .join('\n');
          }
          else {
              var index = style.ids.size - 1;
              var textNode = document.createTextNode(code);
              var nodes = style.element.childNodes;
              if (nodes[index])
                  { style.element.removeChild(nodes[index]); }
              if (nodes.length)
                  { style.element.insertBefore(textNode, nodes[index]); }
              else
                  { style.element.appendChild(textNode); }
          }
      }
  }

  /* script */
  var __vue_script__ = script;

  /* template */
  var __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.theme.tabs},[_vm._t("nav",function(){return [_c('nav',{class:_vm.theme.items},_vm._l((_vm.items),function(item,index){
  var _obj;
  return _c('tab-item',_vm._g({key:index,class:( _obj = {}, _obj[_vm.theme.item] = true, _obj[_vm.theme['item--active']] = _vm.isActive(index), _obj[_vm.theme['item--end']] = item.end, _obj ),attrs:{"nav":_vm.navs[index],"item":item},on:{"click":function($event){$event.preventDefault();return _vm.itemClicked(index)}}},_vm.listeners[index]))}),1)]},{"items":_vm.items}),_vm._v(" "),_c('transition',{attrs:{"tag":"div","name":"slide-down","mode":"out-in"}},[(_vm.keepAlive)?_c('keep-alive',{attrs:{"max":5}},[_c('tab-panel-stateful',{key:_vm.active,class:_vm.theme.panel,attrs:{"item":_vm.activePanel}})],1):_c('tab-panel',{key:_vm.active,class:_vm.theme.panel,attrs:{"item":_vm.activePanel}})],1)],2)};
  var __vue_staticRenderFns__ = [];

    /* style */
    var __vue_inject_styles__ = function (inject) {
      if (!inject) { return }
      inject("data-v-8637b6da_0", { source: ".slide-down-enter-active{transition:opacity .15s ease,transform .15s ease}.slide-down-leave-active{transition:opacity .15s cubic-bezier(1,.5,.8,1),transform .15s cubic-bezier(1,.5,.8,1)}.slide-down-enter,.slide-down-leave-to{opacity:0;transform:translateY(10px)}", map: undefined, media: undefined });

    };
    /* scoped */
    var __vue_scope_id__ = undefined;
    /* module identifier */
    var __vue_module_identifier__ = undefined;
    /* functional template */
    var __vue_is_functional_template__ = false;
    /* style inject SSR */
    
    /* style inject shadow dom */
    

    
    var __vue_component__ = /*#__PURE__*/normalizeComponent(
      { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
      __vue_inject_styles__,
      __vue_script__,
      __vue_scope_id__,
      __vue_is_functional_template__,
      __vue_module_identifier__,
      false,
      createInjector,
      undefined,
      undefined
    );

  exports.Tab = Tab;
  exports.Tabs = __vue_component__;
  exports.deepmerge = deepmerge;
  exports.setHash = setHash;
  exports.themeDark = dark_module;
  exports.themeDefault = themeDefault;
  exports.themeMaterial = material_module;
  exports.themeMaterialDark = materialDark_module;
  exports.themeMetro = metro_module;
  exports.themeMetroDark = metroDark_module;

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;

}({}));
